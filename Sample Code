server.js
javascript const express = 
require('express'); const mongoose = 
require('mongoose'); const authRoutes = 
require('./routes/auth'); 
require('dotenv').config();  const app = 
express(); app.use(express.json());  
mongoose.connect(process.env.MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true });  app.use('/api/auth', authRoutes);  const PORT = process.env.PORT || 5000; app.listen(PORT, () => {     console.log(`Server running on port ${PORT}`); }); 

routes/auth.js
javascript const express = 
require('express'); const router = 
express.Router(); const { generateToken } = 
require('../utils/tokenUtils');  router.post('/login', (req, res) => {     const { username, password } = req.body;     // Authenticate user and generate token     const token = generateToken(username);     res.json({ token }); });  module.exports = router; 

middleware/authMiddleware.js
javascript const jwt = 
require('jsonwebtoken');  const 
authMiddleware = (req, res, next) => {     const token = req.header('Authorization');     if (!token) return res.status(401).send('Access denied.');     jwt.verify(token, process.env.JWT_SECRET, (err, user) => {         if (err) return res.status(403).send('Invalid token.');         req.user = user;         next();     }); };  module.exports = authMiddleware; 
